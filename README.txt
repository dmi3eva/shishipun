Motivating learners is a global problem of education. Online courses often provide users with qualitative contents, but there is only a small part of users who successfully finish the courses.
Paradoxically, one of the provocative and interactive way of learning is teaching someone else. This approach is the basis of Monitorial educational system which was developed by Dr. Andrew Bell and Joseph Lancaster in 19th century. The method was based on the abler pupils being used as 'helpers' to the teacher, passing on the information they learned from other students. The main disadvantage was low quality of mastering knowledge. However, for ‘helpers’ the process was more effective. 
In this work, we consider the conversational agent which simulates a student and has ability to learn in the process of communicating with a user. During the interaction with this bot, the user has an opportunity to understand the theme more clearly. Our work is organized in adversarial way, i.e., a user need to train his personal bot better than others.
The project of student-like conversational agent consists of three parts: theoretical, practical and tests. The main aim of theoretical mode is to teach the bot theoretical aspects of solving different tasks in specific areas. The procedure of constructing algorithms is based on analyzing the texts which are received from the user. During this step, the bot tries to extract key concepts and build the hierarchy among them. In case of the knowledge gap, the bot asks the user for refinements thereby improving the user’s understanding of the theme. The task of generating non-trivial questions related to the user’s explanation of the theory is solved by encoder-decoder recurrent neural network. 
In practical module, the user should teach the bot how to apply the theory to practice. The module consists of several cyclic steps: a user sends a task to the bot, then the bot proposes the solution, then the user repairs the solution, and finally, the bot trains itself using this particular example. The practical part was based on several independent, but connected, neural networks with different architectures. Each of them is responding for the separate single part of solution such as extracting parameters from the statement, classification of the task and calculating the answer. 
Testing the system contains open tests where the statements can be seen by users and close tests for each supported theme. After training, the user can test the bot and receive results: the number of passed tasks.
At this moment, the application is represented as a web-service and was tested on the group of students studying basis of combinatory. 
